Systems:

1. When creating Item objects in Level.cpp loadmap(), get the WeaponProperty object for the Weapon via a global map
(DONE) 2. In level.cpp when parsing Item, fix the constructors so that they only take what is necessary and add rest in Pistol.cpp, Healthpack.cpp
(DONE) 3. Ressources cleanup, check if every new is followed by delete (Level class dtor..), restart() method, clean up Player and Level class!!
4. Bullet CTOR remove hitbox offset (hardcode in update function instead)
5. Bats smaller hitbox
6. Caret align wallhit at bot wall (PistolCaretUpRIGHT, PistolCaretUpLEFT)
7. Handle death animation of enemies (remove from items vector, clean up properly)
8. Create sound strings like "pistolShoot" instead of using the standard item description
9. Make the textLibrary in graphics work for different font sizes
10. Implement collision between weapon powerups (triangles) and the world with Box2D
	- Concepts roughly: - Level holds b2World, tmx parsed Rects are used to create b2Bodies
						- "Loot class" 

Gameplay/Design:

1. 3d Background image for levels

Setup:

(DONE) 1. Keep the external dependencies in source control (http://stackoverflow.com/questions/13433416/trying-to-install-sdl-ttf-in-visual-studio-express-2012-for-windows-desktop)
(DONE) 2. Use relative path for dependencies
3. Use CMake to target more platforms
4. Create a DebugDrawer class which implements methods to draw simple shapes (rects, etc)
	-Wrap SDL_RenderDrawRect etc
	-DrawString(char *, format args ...) via vsprintf, draw debug string at (x,y) coordinates
5. OpenGL + SDL2








FOR THE FUTURE:

- Rewrite Weapons, Bullets, Carets classes

